<!DOCTYPE html>
<html>
<head>
  <title>Flight Booking Form</title>
  <!-- Include Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="/css/styles.css" />
</head>
<!-- {
    price: { economy: 5000, business: 10000 },
    available: { economy: 40, business: 20 },
    booked: { economy: 0, business: 0 },
    _id: new ObjectId('66181823c538ac3c0f70e2a5'),
    flight: 'AA113',
    flightName: 'IndiGo',
    from: 'Chennai',
    to: 'Mumbai',
    departureTime: 2024-05-01T02:30:00.000Z,
    arrivalTime: 2024-05-01T04:30:00.000Z,
    status: 'scheduled',
    createdAt: 2024-04-12T02:08:33.118Z
  } -->
<body>
    <nav class="mb-4">
        <div class="nav__logo">Boobs</div>
        <ul class="nav__links">
            <li class="link"><a href="/">Home</a></li>
            <li class="link"><a href="/">About</a></li>
            <li class="link"><a href="/">Offers</a></li>
            <li class="link"><a href="/">Seats</a></li>
            <li class="link"><a href="/">Destinations</a></li>
        </ul>
        <button class="btn">Contact</button>
    </nav>

    <form class="bookingForm" id="bookingForm">
        <div class="mb-2 d-flex">
            <div style="width:40%">
                <label for="flightNumber" class="form-label">Flight Number</label>
                <p id="flightNumber" class="form-control" ><%= flight.flight %></p>
            </div>
            
            <div style="width: 40%;" class="mx-3">
                <label for="flightName" class="form-label">Flight Name</label>
                <p id="flightName" class="form-control"><%= flight.flightName %></p>
            </div>  
        </div>
        <div class="d-flex mb-3">
            <div style="width: 40%">
                <label for="from" class="form-label">From</label>
                <p id="from" class="form-control"><%= flight.from %></p>
            </div>
            <div style="width: 40%" class="mx-3">
                <label for="to" class="form-label">To</label>
                <p id="to" class="form-control"><%= flight.to %></p>
            </div>
        </div>
        <div class="d-flex mb-3">
            <div style="width: 40%">
                <label for="departureTime" class="form-label">Departure Time</label>
                <p id="departureTime" class="form-control"><%= flight.departureTime %></p>
            </div>
            <div style="width: 40%" class="mx-3">
                <label for="arrivalTime" class="form-label">Arrival Time</label>
                <p id="arrivalTime" class="form-control"><%= flight.arrivalTime %></p>
            </div>
        </div>
        <label for="price" class="form-label h4">Economy Class</label>
        <div class="d-flex">
            <div style="width: 40%">
                <label for="price" class="form-label">Price</label>
                <p id="price" class="form-control"><%= flight.price.economy %></p>
            </div>
            <div style="width: 40%" class="mx-3">
                <label for="available" class="form-label">Available</label>
                <p id="available" class="form-control"><%= flight.available.economy %></p>
            </div>
        </div>
        <label for="price" class="form-label h4">Business Class</label>
        <div class="d-flex">
            <div style="width: 40%">
                <label for="price" class="form-label">Price</label>
                <p id="price" class="form-control"><%= flight.price.business %></p>
            </div>
            <div style="width: 40%" class="mx-3">
                <label for="available" class="form-label">Available</label>
                <p id="available" class="form-control"><%= flight.available.business %></p>
            </div>
        </div>

        <h3 class="mt-3">Passenger Details</h3>
        <div class="d-flex mb-3">
            <div class="mb-3" style="width: 30%;">
                <label for="class" class="form-label">Class</label>
                <select id="class" class="form-select">
                    <option value="economy">Economy</option>
                    <option value="business">Business</option>
                </select>
            </div>
            <div class="mx-3" style="width: 30%;">
                <label for="numPassengers" class="form-label">Number of Passengers</label>
                <input type="number" id="numPassengers" class="form-control" min="1" max="60" onchange="addPassengerFields()">
            </div>
        </div>
        

        <div id="passengerDetails"></div>

        <button type="submit" class="btn btn-primary">Book Now!</button>
    </form>

    <script>
        function addPassengerFields() {
            const numPassengers = parseInt(document.getElementById("numPassengers").value);
            const passengerDetails = document.getElementById("passengerDetails");
            passengerDetails.innerHTML = '';
            for (let i = 1; i <= numPassengers; i++) {
                const passengerDiv = document.createElement('div');
                passengerDiv.className = 'row mb-3';
                passengerDiv.innerHTML = `
                    <label for="passengerName${i}" class="form-label">Passenger ${i} Details</label>
                    <div class="col">
                        <input type="text" id="passengerFirstName${i}" class="form-control" placeholder="First Name" required>
                    </div>
                    <div class="col">
                        <input type="text" id="passengerLastName${i}" class="form-control" placeholder="Last Name" required>
                    </div>
                    <div class="col">
                        <input type="number" id="passengerAge${i}" class="form-control" placeholder="Age" required>
                    </div>
                `;
                passengerDetails.appendChild(passengerDiv);
            }
        }
        
        document.getElementById('bookingForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            if(confirm('Are you sure you want to book the flight?') === false) return;
            const classType = document.getElementById('class').value;
            const tripId = '<%= flight._id %>';
            const count = parseInt(document.getElementById('numPassengers').value);
            const passengers = [];
            for (let i = 1; i <= count; i++) {
                const passengerFirstName = document.getElementById(`passengerFirstName${i}`).value;
                const passengerLastName = document.getElementById(`passengerLastName${i}`).value;
                const passengerName = `${passengerFirstName} ${passengerLastName}`;
                const passengerAge = document.getElementById(`passengerAge${i}`).value;
                passengers.push({ name: passengerName, age: passengerAge });
            }
            const seats = {
                classType : classType,
                count: count
            };
            const response = await fetch('/trip/book', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ tripId,seats, passengers })
            });
            const data = await response.json();
            alert(data.msg);
        });
        
    </script>
</body>
</html>

<!-- const TicketSchema = new Schema({
    trip: {
        type: Schema.Types.ObjectId,
        ref: 'Trip',
        required: true
    },
    user: {
        type: Schema.Types.ObjectId,
        ref: 'User',
        required: true
    },
    passengersCount: {
        economy: {
            type: Number,
            required: true
        },
        business: {
            type: Number,
            required: true
        }
    },
    passengers: 
    [{
            firstName: {
                type: String,
                required: true
            },
            lastName: {
                type: String,
                required: true
            },
            age: {
                type: Number,
                required: true
            },
    }],
    totalPrice: {
        type: Number,
        required: true
    },
    bookingDate: {
        type: Date,
        default: Date.now
    },
    status: {
        type: String,
        enum: ['booked', 'cancelled'],
        default: 'booked'
    }
}); -->